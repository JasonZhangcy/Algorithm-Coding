/**
 *Solution: based on 3Sum
 *有两个注意要点：
 *1. 第二层的循环(j循环)注意跳过重复值判断条件是j > i + 1而不是j > 0
 *2. 最后一层的循环(low, high循环)也必须要注意跳过重复值！！否则会有重复结果的出现
 */
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if (nums.length == 0 || nums == null) return res;
        Arrays.sort(nums);
        for (int i = 0; i < nums.length; i++) {
            if (i > 0 && nums[i] == nums[i-1]) continue;
            for (int j = i + 1; j < nums.length; j++) {
                if (j > i + 1 && nums[j] == nums[j-1]) continue;
                int low = j + 1, high = nums.length - 1;
                while (low < high){
                    if (nums[i] + nums[j] + nums[low] + nums[high] == target) {
                        res.add(Arrays.asList(nums[i], nums[j], nums[low], nums[high]));
                        low++;
                        high--;
                        while (low < high && nums[low] == nums[low-1]) low++;
                        while (low < high && nums[high] == nums[high+1]) high--;
                    }
                    else if (nums[i] + nums[j] + nums[low] + nums[high] > target)
                        high--;
                    else 
                        low++;
                }
            }
        }
        return res;
    }
}
