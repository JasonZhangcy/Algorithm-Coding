/**
*时间复杂度;O(n)
*关键点：
*1.只要总的gas[i] > 总的cost[i]，那么一定存在起始点能跑完一个圈
*2.先设start = 0, 如果到了某一个点(例如i)过不去了，那么不仅start不能作为起始点，在start~i之间的所有点都不能作为起始点（原因在下面），所以start要设为下一个点，同时cur = 0
*解释上面原因：因为i要过到i + 1必定是remain+gas[i]-cost[i]，remain必定是>=0的，否则前面过不到i这，那么连前面正remain到i这都过不去，那么无论从前面哪里开始，都会过不去i这关
*为什么最后一定是start就是起始点，不是start后面的点呢（即使start后面也有起始点累计为正）？
*因为这题只有一个解，那么我们一定要找到【第一个】正累计的点。如果start是第一个可以正累计到最后的点，那么它一定是唯一一个解，因为后面的正累计都比它小
*/
public class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int total = 0, cur = 0, start = 0;
        for(int i = start; i < gas.length; i++){
            total += gas[i] - cost[i];
            if(cur + gas[i] >= cost[i]){
                cur += gas[i] - cost[i];
            }else{
                start = i + 1;
                cur = 0;
            }
        }
        return (total >= 0) ? start : -1;
    }
}
