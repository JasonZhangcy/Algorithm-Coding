/**
 * Solution: 利用Comparator将数组排序
 */
class Solution {
    public String largestNumber(int[] nums) {
        if (nums.length == 0) return "";
        String[] strs = new String[nums.length];
        String res = "";
        for (int i = 0; i < nums.length; i++) {
            strs[i] = String.valueOf(nums[i]);
        }
        //匿名写法
        Arrays.sort(strs, new Comparator<String>() {
            @Override
            public int compare(String a, String b) {//注意，这里虽然是用str1和str2比较，但是只要满足返回-1，0，1，就等价于利用a和b比较
                String str1 = a + b;
                String str2 = b + a;
                return str2.compareTo(str1); //注意这里是降序排序，方便后面直接连接字符串（如果是str1.compareTo(str2)就是升序）
            }
        });
        
        //不匿名写法
        // Comparator<String> com = new Comparator<String>() {
        //     @Override
        //     public int compare(String a, String b) {
        //         String str1 = a + b;
        //         String str2 = b + a;
        //         return str2.compareTo(str1);
        //     }
        // };
        // Arrays.sort(strs, com);
        
        if (strs[0].equals("0")) return "0"; //edge case,数组全部为0的情况
        for (String str : strs) {
            res += str;
        }
        return res;
    }
}
