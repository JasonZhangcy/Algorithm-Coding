/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
 /**
  *重点学习的思想：dummy节点的使用：令dummy = pre, 利用pre.next = cur 直接将dummy.next定位到head node的位置
  *注意这里不能先求和然后再将和用链表表示，因为和太大的话int的范围会溢出
  */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int unit = 0, tens = 0;
        ListNode pre = new ListNode(-1);
        ListNode dummy = pre;
        while (l1 != null && l2 != null) {
            int num = l1.val + l2.val + tens;
            unit = num % 10;
            tens = num / 10;
            ListNode cur = new ListNode(unit);
            pre.next = cur;
            pre = cur;
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            int num = l1.val + tens;
            unit = num % 10;
            tens = num / 10;
            ListNode cur = new ListNode(unit);
            pre.next = cur;
            pre = cur;
            l1 = l1.next;
        }
        while (l2 != null) {
            int num = l2.val + tens;
            unit = num % 10;
            tens = num / 10;
            ListNode cur = new ListNode(unit);
            pre.next = cur;
            pre = cur;
            l2 = l2.next;
        }
        if (tens > 0) {
            ListNode cur = new ListNode(tens);
            pre.next = cur;
            pre = cur;
        }
        return dummy.next;
    }
}
