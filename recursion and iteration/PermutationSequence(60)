/**
*时间复杂度：O(n)
*思路：link: https://discuss.leetcode.com/topic/17348/explain-like-i-m-five-java-solution-in-o-n
*/
public class Solution {
    public String getPermutation(int n, int k) {
        List<Integer> list = new ArrayList();
        int[] factorial = new int[n+1];
        StringBuilder sb = new StringBuilder();
        factorial[0] = 1;
        int sum = 1;        
        for(int i = 1; i <= n; i++){ 
            sum *= i;
            factorial[i] = sum;
        }
        for(int i = 1; i <= n; i++){
            list.add(i);
        }
        k--;
        for(int i = 1; i <= n; i++){
            int index = k / factorial[n-i];
            sb.append(list.get(index));
            list.remove(index);
            k -= index*factorial[n-i];
        }
        return sb.toString();
    }

}
