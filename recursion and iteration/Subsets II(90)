/**
*思路：每进一层就add一次
*关于combination、permutation的总结：
*combination的下一层直接i+1即可；如果有重复元素，则先排序，然后重复的元素continue(每一层的第一个重复元素不能continue)
*permutation则要每一层都从0开始遍历，同时记录使用过的元素（一般是用一个数组记录）、
*/
public class Solution {
    List<List<Integer>> res = new ArrayList(); 
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        backtrack(new ArrayList(),nums,0);
        return res;
    }
    public void backtrack(List<Integer> curList, int[] nums, int start){
        res.add(new ArrayList(curList));
        for(int i = start; i < nums.length; i++){
            if(i != start && nums[i] == nums[i-1]) continue;
            curList.add(nums[i]);
            backtrack(curList,nums,i+1);
            curList.remove(curList.size()-1);
        }
    }
}
