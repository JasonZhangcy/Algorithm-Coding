/**
*思路：其实就是比较左子树和右子树的翻转是否相等
*将node1的left、right节点分别与node2的right、left节点比较
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root == null) return true;
        return isSymmetric(root.left,root.right);
    }
    public boolean isSymmetric(TreeNode node1, TreeNode node2){
        if(node1 == null && node2 == null) return true;
        if(node1 == null || node2 == null || node1.val != node2.val) 
            return false;
        return isSymmetric(node1.left,node2.right) && isSymmetric(node1.right,node2.left);
    }
}
