/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/

public class Solution {
    public int TreeDepth(TreeNode root) {
		    if (root == null) return 0;
        if (root.left == null && root.right == null) return 1;
        int leftDepth = TreeDepth(root.left);     #if root.left == null then leftDepth = 0
        int rightDepth = TreeDepth(root.right);
        return leftDepth > rightDepth ? leftDepth+1 : rightDepth+1;
    }
}

####### my original work(wrong) ########
public class Solution {
    int maxDepth = 0;
    boolean isRoot = true;
    public int TreeDepth(TreeNode root) {
        if (isRoot) root.val = 0;
        if (root.left == null && root.right == null){
            if (root.val > maxDepth){
                maxDepth = root.val;
            }
            return maxDepth; 
        }
        if (root.left != null){
            root.left.val = root.val + 1;
            return TreeDepth(root.left);
        }        
        if (root.right != null){
            root.right.val = root.val + 1;
            return TreeDepth(root.right);
        }
        
      	return maxDepth;
    }
}
